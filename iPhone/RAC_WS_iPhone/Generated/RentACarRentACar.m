/*
	RentACarRentACar.m
	The implementation classes and methods for the RentACar web service.
	Generated by SudzC.com
*/

#import "RentACarRentACar.h"
				
#import "Soap.h"
	
#import "RentACarCustomer.h"
#import "RentACarVehicle.h"
#import "RentACarSQLException.h"
#import "RentACarLocation.h"
#import "RentACarRenting.h"

/* Implementation of the service */
				
@implementation RentACarRentACar

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://localhost:8080/axis2/services/RentACar.RentACarHttpSoap11Endpoint/";
            //self.serviceUrl = @"http://193.22.73.246:8080/axis2/services/RentACar.RentACarHttpSoap11Endpoint/";
			self.namespace = @"http://rentACar";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (RentACarRentACar*) service {
		return [RentACarRentACar serviceWithUsername:nil andPassword:nil];
	}
	
	+ (RentACarRentACar*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[RentACarRentACar alloc] initWithUsername:username andPassword:password];
	}

		
	/* Returns .  */
	- (SoapRequest*) doRating: (id <SoapDelegate>) handler customerId: (int) customerId rentingId: (int) rentingId ratingValue: (int) ratingValue
	{
		return [self doRating: handler action: nil customerId: customerId rentingId: rentingId ratingValue: ratingValue];
	}

	- (SoapRequest*) doRating: (id) _target action: (SEL) _action customerId: (int) customerId rentingId: (int) rentingId ratingValue: (int) ratingValue
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: customerId] forName: @"customerId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: rentingId] forName: @"rentingId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: ratingValue] forName: @"ratingValue"]];
		NSString* _envelope = [Soap createEnvelope: @"doRating" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:doRating" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RentACarCustomer*.  */
	- (SoapRequest*) checkLogin: (id <SoapDelegate>) handler email: (NSString*) email password: (NSString*) password
	{
		return [self checkLogin: handler action: nil email: email password: password];
	}

	- (SoapRequest*) checkLogin: (id) _target action: (SEL) _action email: (NSString*) email password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: email forName: @"email"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"]];
		NSString* _envelope = [Soap createEnvelope: @"checkLogin" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:checkLogin" postData: _envelope deserializeTo: [RentACarCustomer alloc]];
		[_request send];
		return _request;
	}

	/* Returns RentACarCustomer*.  */
	- (SoapRequest*) getCustomerById: (id <SoapDelegate>) handler id: (int) _id
	{
		return [self getCustomerById: handler action: nil id: _id];
	}

	- (SoapRequest*) getCustomerById: (id) _target action: (SEL) _action id: (int) _id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: _id] forName: @"id"]];
		NSString* _envelope = [Soap createEnvelope: @"getCustomerById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:getCustomerById" postData: _envelope deserializeTo: [RentACarCustomer alloc]];
		[_request send];
		return _request;
	}

	/* Returns double.  */
	- (SoapRequest*) getRating: (id <SoapDelegate>) handler vehicleId: (int) vehicleId
	{
		return [self getRating: handler action: nil vehicleId: vehicleId];
	}

	- (SoapRequest*) getRating: (id) _target action: (SEL) _action vehicleId: (int) vehicleId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: vehicleId] forName: @"vehicleId"]];
		NSString* _envelope = [Soap createEnvelope: @"getRating" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:getRating" postData: _envelope deserializeTo: @"double"];
		[_request send];
		return _request;
	}

	/* Returns RentACarRenting*.  */
	- (SoapRequest*) doReservation: (id <SoapDelegate>) handler vehicleId: (int) vehicleId customerId: (int) customerId startDate: (NSString*) startDate returnDate: (NSString*) returnDate totalPrice: (double) totalPrice
	{
		return [self doReservation: handler action: nil vehicleId: vehicleId customerId: customerId startDate: startDate returnDate: returnDate totalPrice: totalPrice];
	}

	- (SoapRequest*) doReservation: (id) _target action: (SEL) _action vehicleId: (int) vehicleId customerId: (int) customerId startDate: (NSString*) startDate returnDate: (NSString*) returnDate totalPrice: (double) totalPrice
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: vehicleId] forName: @"vehicleId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: customerId] forName: @"customerId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: startDate forName: @"startDate"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: returnDate forName: @"returnDate"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithDouble: totalPrice] forName: @"totalPrice"]];
		NSString* _envelope = [Soap createEnvelope: @"doReservation" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:doReservation" postData: _envelope deserializeTo: [RentACarRenting alloc]];
		[_request send];
		return _request;
	}

	/* Returns RentACarLocation*.  */
	- (SoapRequest*) getLocationById: (id <SoapDelegate>) handler id: (int) _id
	{
		return [self getLocationById: handler action: nil id: _id];
	}

	- (SoapRequest*) getLocationById: (id) _target action: (SEL) _action id: (int) _id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: _id] forName: @"id"]];
		NSString* _envelope = [Soap createEnvelope: @"getLocationById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:getLocationById" postData: _envelope deserializeTo: [RentACarLocation alloc]];
		[_request send];
		return _request;
	}

	/* Returns RentACarVehicle*.  */
	- (SoapRequest*) getVehicleById: (id <SoapDelegate>) handler id: (int) _id
	{
		return [self getVehicleById: handler action: nil id: _id];
	}

	- (SoapRequest*) getVehicleById: (id) _target action: (SEL) _action id: (int) _id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: _id] forName: @"id"]];
		NSString* _envelope = [Soap createEnvelope: @"getVehicleById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:getVehicleById" postData: _envelope deserializeTo: [RentACarVehicle alloc]];
		[_request send];
		return _request;
	}

	/* Returns RentACarLocation*.  */
	- (SoapRequest*) getAllLocations: (id <SoapDelegate>) handler
	{
		return [self getAllLocations: handler action: nil];
	}

	- (SoapRequest*) getAllLocations: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"getAllLocations" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:getAllLocations" postData: _envelope deserializeTo: [RentACarLocation alloc]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) register: (id <SoapDelegate>) handler email: (NSString*) email password: (NSString*) password salutation: (NSString*) salutation forename: (NSString*) forename lastname: (NSString*) lastname street: (NSString*) street city: (NSString*) city zip: (NSString*) zip phone: (NSString*) phone
	{
		return [self register: handler action: nil email: email password: password salutation: salutation forename: forename lastname: lastname street: street city: city zip: zip phone: phone];
	}

	- (SoapRequest*) register: (id) _target action: (SEL) _action email: (NSString*) email password: (NSString*) password salutation: (NSString*) salutation forename: (NSString*) forename lastname: (NSString*) lastname street: (NSString*) street city: (NSString*) city zip: (NSString*) zip phone: (NSString*) phone
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: email forName: @"email"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: salutation forName: @"salutation"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: forename forName: @"forename"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: lastname forName: @"lastname"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: street forName: @"street"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: city forName: @"city"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: zip forName: @"zip"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: phone forName: @"phone"]];
		NSString* _envelope = [Soap createEnvelope: @"register" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:register" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns RentACarRenting*.  */
	- (SoapRequest*) getRentingsByCustomerId: (id <SoapDelegate>) handler customerId: (int) customerId
	{
		return [self getRentingsByCustomerId: handler action: nil customerId: customerId];
	}

	- (SoapRequest*) getRentingsByCustomerId: (id) _target action: (SEL) _action customerId: (int) customerId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: customerId] forName: @"customerId"]];
		NSString* _envelope = [Soap createEnvelope: @"getRentingsByCustomerId" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:getRentingsByCustomerId" postData: _envelope deserializeTo: [RentACarRenting alloc]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) customerExists: (id <SoapDelegate>) handler email: (NSString*) email
	{
		return [self customerExists: handler action: nil email: email];
	}

	- (SoapRequest*) customerExists: (id) _target action: (SEL) _action email: (NSString*) email
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: email forName: @"email"]];
		NSString* _envelope = [Soap createEnvelope: @"customerExists" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:customerExists" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns RentACarVehicle*.  */
	- (SoapRequest*) findVehicles: (id <SoapDelegate>) handler startDate: (NSString*) startDate startLocation: (int) startLocation returnDate: (NSString*) returnDate
	{
		return [self findVehicles: handler action: nil startDate: startDate startLocation: startLocation returnDate: returnDate];
	}

	- (SoapRequest*) findVehicles: (id) _target action: (SEL) _action startDate: (NSString*) startDate startLocation: (int) startLocation returnDate: (NSString*) returnDate
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: startDate forName: @"startDate"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: startLocation] forName: @"startLocation"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: returnDate forName: @"returnDate"]];
		NSString* _envelope = [Soap createEnvelope: @"findVehicles" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
            SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:findVehicles" postData: _envelope deserializeTo: [RentACarVehicle alloc]];
		[_request send];
		return _request;
	}


@end
	