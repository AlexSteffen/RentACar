/*
	RentACarVehicle.h
	The implementation of properties and methods for the RentACarVehicle object.
	Generated by SudzC.com
*/
#import "RentACarVehicle.h"

@implementation RentACarVehicle
	@synthesize binaryImage = _binaryImage;
	@synthesize climatic = _climatic;
	@synthesize color = _color;
	@synthesize doors = _doors;
	@synthesize engineConsum = _engineConsum;
	@synthesize engineHp = _engineHp;
	@synthesize engineSize = _engineSize;
	@synthesize engineType = _engineType;
	@synthesize gear = _gear;
	@synthesize _id = __id;
	@synthesize locationId = _locationId;
	@synthesize manufacturer = _manufacturer;
	@synthesize model = _model;
	@synthesize navigationSystem = _navigationSystem;
	@synthesize pricePerDay = _pricePerDay;
	@synthesize seats = _seats;
	@synthesize smokers = _smokers;
	@synthesize type = _type;

	- (id) init
	{
		if(self = [super init])
		{
			self.binaryImage = nil;
			self.color = nil;
			self.engineType = nil;
			self.manufacturer = nil;
			self.model = nil;
			self.type = nil;

		}
		return self;
	}

	+ (RentACarVehicle*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (RentACarVehicle*)[[RentACarVehicle alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.binaryImage = [Soap dataFromString: [Soap getNodeValue: node withName: @"binaryImage"]];
			self.climatic = [[Soap getNodeValue: node withName: @"climatic"] intValue];
			self.color = [Soap getNodeValue: node withName: @"color"];
			self.doors = [[Soap getNodeValue: node withName: @"doors"] intValue];
			self.engineConsum = [[Soap getNodeValue: node withName: @"engineConsum"] doubleValue];
			self.engineHp = [[Soap getNodeValue: node withName: @"engineHp"] intValue];
			self.engineSize = [[Soap getNodeValue: node withName: @"engineSize"] doubleValue];
			self.engineType = [Soap getNodeValue: node withName: @"engineType"];
			self.gear = [[Soap getNodeValue: node withName: @"gear"] intValue];
			self._id = [[Soap getNodeValue: node withName: @"id"] intValue];
			self.locationId = [[Soap getNodeValue: node withName: @"locationId"] intValue];
			self.manufacturer = [Soap getNodeValue: node withName: @"manufacturer"];
			self.model = [Soap getNodeValue: node withName: @"model"];
			self.navigationSystem = [[Soap getNodeValue: node withName: @"navigationSystem"] intValue];
			self.pricePerDay = [[Soap getNodeValue: node withName: @"pricePerDay"] doubleValue];
			self.seats = [[Soap getNodeValue: node withName: @"seats"] intValue];
			self.smokers = [[Soap getNodeValue: node withName: @"smokers"] intValue];
			self.type = [Soap getNodeValue: node withName: @"type"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Vehicle"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.binaryImage != nil) [s appendFormat: @"<binaryImage>%@</binaryImage>", [Soap getBase64String: self.binaryImage]];
		[s appendFormat: @"<climatic>%@</climatic>", [NSString stringWithFormat: @"%i", self.climatic]];
		if (self.color != nil) [s appendFormat: @"<color>%@</color>", [[self.color stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<doors>%@</doors>", [NSString stringWithFormat: @"%i", self.doors]];
		[s appendFormat: @"<engineConsum>%@</engineConsum>", [NSString stringWithFormat: @"%f", self.engineConsum]];
		[s appendFormat: @"<engineHp>%@</engineHp>", [NSString stringWithFormat: @"%i", self.engineHp]];
		[s appendFormat: @"<engineSize>%@</engineSize>", [NSString stringWithFormat: @"%f", self.engineSize]];
		if (self.engineType != nil) [s appendFormat: @"<engineType>%@</engineType>", [[self.engineType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<gear>%@</gear>", [NSString stringWithFormat: @"%i", self.gear]];
		[s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%i", self._id]];
		[s appendFormat: @"<locationId>%@</locationId>", [NSString stringWithFormat: @"%i", self.locationId]];
		if (self.manufacturer != nil) [s appendFormat: @"<manufacturer>%@</manufacturer>", [[self.manufacturer stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.model != nil) [s appendFormat: @"<model>%@</model>", [[self.model stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<navigationSystem>%@</navigationSystem>", [NSString stringWithFormat: @"%i", self.navigationSystem]];
		[s appendFormat: @"<pricePerDay>%@</pricePerDay>", [NSString stringWithFormat: @"%f", self.pricePerDay]];
		[s appendFormat: @"<seats>%@</seats>", [NSString stringWithFormat: @"%i", self.seats]];
		[s appendFormat: @"<smokers>%@</smokers>", [NSString stringWithFormat: @"%i", self.smokers]];
		if (self.type != nil) [s appendFormat: @"<type>%@</type>", [[self.type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[RentACarVehicle class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
